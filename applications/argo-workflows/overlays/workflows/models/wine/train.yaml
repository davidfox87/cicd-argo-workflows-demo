apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: deploy-wine-clf-
  namespace: workflows
spec:
  entrypoint: train-workflow
  serviceAccountName: workflow
  volumes:
  - name: workdir
    persistentVolumeClaim:
      claimName: my-pvc

  templates:
  - name: train-workflow
    dag:
      tasks:
      - name: preprocess
        template: preprocess

      - name: train
        dependencies: [preprocess]
        template: train
        arguments:
          parameters: [{name: model_path, value: models/model.pkl}]
          artifacts:
            - name: data
              from: "{{tasks.preprocess.outputs.artifacts.output}}"
      - name: serve
        dependencies: [train]
        template: seldon-serve

  - name: preprocess
    outputs:
      artifacts:
      - name: output
        path: /tmp/data.csv
    container:
      name: preprocess
      image: foxy7887/xgb_train:v19
      command: ["python3", "./run_preprocess.py"]

  - name: train
    inputs:
      parameters:
      - name: model_path
      artifacts:
      - name: data
        path: /tmp/data.csv
    container:
      name: train
      image: foxy7887/xgb_train:v19
      command: ["python3", "./run_train.py"]
      args: ["--model_file", "{{inputs.parameters.model_path}}", "--bucket", "my-bucket"]
      volumeMounts:
      - name: workdir
        mountPath: /tmp
  - name: seldon-serve
    resource:                   # indicates that this is a resource template
      action: apply             # can be any kubectl action (e.g. create, delete, apply, patch)
      manifest: |               # put your kubernetes spec here
        apiVersion: "machinelearning.seldon.io/v1"
        kind: "SeldonDeployment"
        metadata:
          labels: 
            app: seldon
          name: "seldon-deployment-{{workflow.name}}"
        spec:
          annotations:
            project_name: test Pipeline
            deployment_version: v1
          name: "seldon-deployment-{{workflow.name}}"
          predictors:
          - annotations:
              sidecar.istio.io/inject: "false"
            componentSpecs:
            - spec:
                containers:
                - name: wine-clf
                  image: foxy7887/wine-model:v10
                  imagePullPolicy: IfNotPresent

                  volumeMounts:
                  - name: persistent-storage
                    mountPath: /tmp
                terminationGracePeriodSeconds: 20
                volumes:
                - name: persistent-storage
                  persistentVolumeClaim:
                    claimName: my-pvc
            graph:
              name: wine-clf
              endpoint:
                type: REST
              type: MODEL
            name: single-model
            replicas: 1
            annotations:
              predictor_version: v1

  - name: print-model-uri
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["ls /tmp/model.pkl"]

