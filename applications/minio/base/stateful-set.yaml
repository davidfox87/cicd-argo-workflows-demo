apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  labels:
    app: minio
spec:
  selector:
    matchLabels:
      app: minio
  serviceName: "minio-service"
  replicas: 1
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: quay.io/minio/minio:latest
          ports:
          - containerPort: 9090
          imagePullPolicy: IfNotPresent
          command:
          - /bin/bash
          - -c
          args: 
          - minio server /data --console-address :9090
          volumeMounts:
          - mountPath: /data
            name: minio-vol # Corresponds to the `spec.volumes` Persistent Volume
          env:
            - name: MINIO_ACCESS_KEY
              value: "minio"
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-creds
                  key: password
                  optional: false
  ## This VolumeClaimTemplate will claim the first available pv with the requested storage class
  volumeClaimTemplates:
  - metadata: 
      name: minio-vol
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
      storageClassName: standard
  # securityContext:
  #       runAsUser: 1000
  #       runAsGroup: 1000
  #       runAsNonRoot: true
  #       fsGroup: 1000
